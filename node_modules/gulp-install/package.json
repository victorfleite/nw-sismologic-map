{
  "name": "gulp-install",
  "version": "0.6.0",
  "description": "Automatically install npm, bower, tsd, and pip packages/dependencies if the relative configurations are found in the gulp file stream respectively",
  "main": "index.js",
  "scripts": {
    "test": "NODE_ENV=test mocha -R spec"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/slushjs/gulp-install"
  },
  "keywords": [
    "gulpplugin",
    "bower",
    "npm",
    "install"
  ],
  "author": {
    "name": "Joakim Carlstein",
    "email": "joakim@klei.se"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/slushjs/gulp-install/issues"
  },
  "homepage": "https://github.com/slushjs/gulp-install",
  "dependencies": {
    "gulp-util": "^3.0.4",
    "through2": "^2.0.0",
    "which": "^1.0.9"
  },
  "devDependencies": {
    "chai": "^3.2.0",
    "mocha": "^2.2.1"
  },
  "readme": "# gulp-install [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][depstat-image]][depstat-url]\n\n> Automatically install npm, bower, tsd, and pip packages/dependencies if the relative configurations are found in the gulp file stream respectively\n\n| File Found | Command run|  \n| --- | --- |  \n|`package.json` | `npm install`|  \n|`bower.json` | `bower install`|  \n|`tsd.json` | `tsd install`|  \n|`requirements.txt` | `pip install -r requirements.txt`|  \n\nIt will run the command in the directory it finds the file, so if you have configs nested in a lower directory than your `slushfile.js`/`gulpfile.js`, this will still work.\n\n## Primary objective\n\nUsed as the install step when using [`slush`](https://www.npmjs.org/package/slush) as a Yeoman replacement.\n\n## Installation\n\n### For global use with slush\n\nInstall `gulp-install` as a dependency:\n\n```shell\nnpm install --save gulp-install\n```\n\n### For local use with gulp\n\nInstall `gulp-install` as a development dependency:\n\n```shell\nnpm install --save-dev gulp-install\n```\n\n## Usage\n\n### In your `slushfile.js`:\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install());\n```\n\n### In your `gulpfile.js`:\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(['./bower.json', './package.json'])\n  .pipe(install());\n```\n\n## Options\n\nTo not trigger the install use `--skip-install` as CLI parameter when running `slush` or `gulp`.\n\n### options.production\n\n**Type:** `Boolean`\n\n**Default:** `false`\n\n\nSet to `true` if `npm install` should be appended with the `--production` parameter when stream contains `package.json`.\n\n**Example:**\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install({production: true}));  \n```\n\n### options.ignoreScripts\n\n**Type:** `Boolean`\n\n**Default:** `false`\n\n\nSet to `true` if `npm install` should be appended with the `--ignore-scripts` parameter when stream contains `package.json`. Useful for skipping `postinstall` scripts with `npm`.\n\n**Example:**\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install({ignoreScripts: true}));\n```\n\n### options.noOptional\n\n**Type:** `Boolean`\n\n**Default:** `false`\n\nSet to `true` if `npm install` should be appended with the `--no-optional` parameter which will prevent optional dependencies from being installed.\n\n**Example:**\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install({noOptional: true}));\n```\n\n### options.allowRoot\n\n**Type:** `Boolean`\n\n**Default:** `false`\n\n\nSet to `true` if `bower install` should be appended with the `--allow-root` parameter when stream contains `bower.json`.\n\n**Example:**\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install({allowRoot: true}));  \n```\n\n### options.args\n\n**Type:** `Array or String`\n\n**Default:** `undefined`\n\n\nSpecify additional arguments that will be passed to the install command(s).\n\n**Example:**\n\n```javascript\nvar install = require(\"gulp-install\");\n\ngulp.src(__dirname + '/templates/**')\n  .pipe(gulp.dest('./'))\n  .pipe(install({\n      args: ['dev', '--no-shrinkwrap' ]} // npm install --dev --no-shrinkwrap\n    ));  \n```\n\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n[npm-url]: https://npmjs.org/package/gulp-install\n[npm-image]: https://badge.fury.io/js/gulp-install.png\n\n[travis-url]: http://travis-ci.org/slushjs/gulp-install\n[travis-image]: https://secure.travis-ci.org/slushjs/gulp-install.png?branch=master\n\n[depstat-url]: https://david-dm.org/slushjs/gulp-install\n[depstat-image]: https://david-dm.org/slushjs/gulp-install.png\n",
  "readmeFilename": "README.md",
  "_id": "gulp-install@0.6.0",
  "_from": "gulp-install@~0.6.0"
}
